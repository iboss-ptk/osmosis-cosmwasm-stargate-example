{"version":3,"file":"index.esm.js","sources":["../src/contracts/TokenfactoryContract.ts"],"sourcesContent":["/**\n* This file was automatically generated by cosmwasm-typescript-gen@0.3.9.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the cosmwasm-typescript-gen generate command to regenerate this file.\n*/\n\nimport { CosmWasmClient, ExecuteResult, SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { Coin, StdFee } from \"@cosmjs/amino\";\nexport type ExecuteMsg = {\n  create_denom: {\n    subdenom: string;\n    [k: string]: unknown;\n  };\n};\nexport interface InstantiateMsg {\n  [k: string]: unknown;\n}\nexport type QueryMsg = string;\nexport interface TokenfactoryReadOnlyInterface {\n  contractAddress: string;\n}\nexport class TokenfactoryQueryClient implements TokenfactoryReadOnlyInterface {\n  client: CosmWasmClient;\n  contractAddress: string;\n\n  constructor(client: CosmWasmClient, contractAddress: string) {\n    this.client = client;\n    this.contractAddress = contractAddress;\n  }\n\n}\nexport interface TokenfactoryInterface extends TokenfactoryReadOnlyInterface {\n  contractAddress: string;\n  sender: string;\n  createDenom: ({\n    subdenom\n  }: {\n    subdenom: string;\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;\n}\nexport class TokenfactoryClient extends TokenfactoryQueryClient implements TokenfactoryInterface {\n  client: SigningCosmWasmClient;\n  sender: string;\n  contractAddress: string;\n\n  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {\n    super(client, contractAddress);\n    this.client = client;\n    this.sender = sender;\n    this.contractAddress = contractAddress;\n    this.createDenom = this.createDenom.bind(this);\n  }\n\n  createDenom = async ({\n    subdenom\n  }: {\n    subdenom: string;\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: readonly Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      create_denom: {\n        subdenom\n      }\n    }, fee, memo, funds);\n  };\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIE;AAiBF,IAAA,uBAAA,kBAAA,YAAA;IAIE,SAAY,uBAAA,CAAA,MAAsB,EAAE,eAAuB,EAAA;AACzD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEH,OAAC,uBAAA,CAAA;AAAD,CAAC,EAAA,CAAA,CAAA;AAUD,IAAA,kBAAA,kBAAA,UAAA,MAAA,EAAA;IAAwC,SAAuB,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAA;AAK7D,IAAA,SAAA,kBAAA,CAAY,MAA6B,EAAE,MAAc,EAAE,eAAuB,EAAA;AAAlF,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,eAAe,CAAC,IAK/B,IAAA,CAAA;QAED,KAAW,CAAA,WAAA,GAAG,UAAO,EAIpB,EAAE,GAAsC,EAAE,IAAa,EAAE,KAAuB,EAAA;AAH/E,YAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;AAGP,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAsC,GAAA,MAAA,CAAA,EAAA;;;;AAChC,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;AAClE,gCAAA,YAAY,EAAE;AACZ,oCAAA,QAAQ,EAAA,QAAA;AACT,iCAAA;AACF,6BAAA,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA,CAAA;AAJpB,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,aAAO,SAIa,CAAC,CAAA;;;;SACtB,CAAC;AAhBA,QAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;KAChD;IAaH,OAAC,kBAAA,CAAA;AAAD,CAxBA,CAAwC,uBAAuB,CAwB9D,CAAA;;;;;;;;;;"}